/* tslint:disable */
/* eslint-disable */
/**
 * Developer API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  CreateApp409Response,
  CreateApp422Response,
  CreateApp423Response,
  ListProjects400Response,
  ListProjects401Response,
  ListProjects403Response,
  ListProjects404Response,
  ListProjects429Response,
  ListProjects500Response,
  Subscription,
} from '../models/index';
import {
    CreateApp409ResponseFromJSON,
    CreateApp409ResponseToJSON,
    CreateApp422ResponseFromJSON,
    CreateApp422ResponseToJSON,
    CreateApp423ResponseFromJSON,
    CreateApp423ResponseToJSON,
    ListProjects400ResponseFromJSON,
    ListProjects400ResponseToJSON,
    ListProjects401ResponseFromJSON,
    ListProjects401ResponseToJSON,
    ListProjects403ResponseFromJSON,
    ListProjects403ResponseToJSON,
    ListProjects404ResponseFromJSON,
    ListProjects404ResponseToJSON,
    ListProjects429ResponseFromJSON,
    ListProjects429ResponseToJSON,
    ListProjects500ResponseFromJSON,
    ListProjects500ResponseToJSON,
    SubscriptionFromJSON,
    SubscriptionToJSON,
} from '../models/index';

export interface CancelSubscriptionRequest {
    projectId: string;
    subscriptionId: string;
}

export interface RefundSubscriptionRequest {
    projectId: string;
    subscriptionId: string;
}

/**
 * 
 */
export class SubscriptionApi extends runtime.BaseAPI {

    /**
     * This endpoint requires the following permission(s): `customer_information:subscriptions:read_write`.
     * Cancels an active RevenueCat Billing subscription
     */
    async cancelSubscriptionRaw(requestParameters: CancelSubscriptionRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Subscription>> {
        if (requestParameters['projectId'] == null) {
            throw new runtime.RequiredError(
                'projectId',
                'Required parameter "projectId" was null or undefined when calling cancelSubscription().'
            );
        }

        if (requestParameters['subscriptionId'] == null) {
            throw new runtime.RequiredError(
                'subscriptionId',
                'Required parameter "subscriptionId" was null or undefined when calling cancelSubscription().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.accessToken) {
            const token = this.configuration.accessToken;
            const tokenString = await token("BearerAuth", []);

            if (tokenString) {
                headerParameters["Authorization"] = `Bearer ${tokenString}`;
            }
        }
        const response = await this.request({
            path: `/projects/{project_id}/subscriptions/{subscription_id}/actions/cancel`.replace(`{${"project_id"}}`, encodeURIComponent(String(requestParameters['projectId']))).replace(`{${"subscription_id"}}`, encodeURIComponent(String(requestParameters['subscriptionId']))),
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => SubscriptionFromJSON(jsonValue));
    }

    /**
     * This endpoint requires the following permission(s): `customer_information:subscriptions:read_write`.
     * Cancels an active RevenueCat Billing subscription
     */
    async cancelSubscription(requestParameters: CancelSubscriptionRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Subscription> {
        const response = await this.cancelSubscriptionRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * This endpoint requires the following permission(s): `customer_information:subscriptions:read_write`.
     * Refunds the last payment of an active RevenueCat Billing subscription and revokes access to associated granted entitlements.
     */
    async refundSubscriptionRaw(requestParameters: RefundSubscriptionRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Subscription>> {
        if (requestParameters['projectId'] == null) {
            throw new runtime.RequiredError(
                'projectId',
                'Required parameter "projectId" was null or undefined when calling refundSubscription().'
            );
        }

        if (requestParameters['subscriptionId'] == null) {
            throw new runtime.RequiredError(
                'subscriptionId',
                'Required parameter "subscriptionId" was null or undefined when calling refundSubscription().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.accessToken) {
            const token = this.configuration.accessToken;
            const tokenString = await token("BearerAuth", []);

            if (tokenString) {
                headerParameters["Authorization"] = `Bearer ${tokenString}`;
            }
        }
        const response = await this.request({
            path: `/projects/{project_id}/subscriptions/{subscription_id}/actions/refund`.replace(`{${"project_id"}}`, encodeURIComponent(String(requestParameters['projectId']))).replace(`{${"subscription_id"}}`, encodeURIComponent(String(requestParameters['subscriptionId']))),
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => SubscriptionFromJSON(jsonValue));
    }

    /**
     * This endpoint requires the following permission(s): `customer_information:subscriptions:read_write`.
     * Refunds the last payment of an active RevenueCat Billing subscription and revokes access to associated granted entitlements.
     */
    async refundSubscription(requestParameters: RefundSubscriptionRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Subscription> {
        const response = await this.refundSubscriptionRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
