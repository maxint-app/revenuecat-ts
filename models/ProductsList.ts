/* tslint:disable */
/* eslint-disable */
/**
 * Developer API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from "../runtime.ts";
import type { Product } from "./Product.ts";
import {
    ProductFromJSON,
    ProductFromJSONTyped,
    ProductToJSON,
} from "./Product.ts";

/**
 * List of products attached to the entitlement
 * @export
 * @interface ProductsList
 */
export interface ProductsList {
    /**
     * String representing the object's type. Objects of the same type share the same value. Always has the value `list`.
     * @type {string}
     * @memberof ProductsList
     */
    object: ProductsListObjectEnum;
    /**
     * Details about each object.
     * @type {Array<Product>}
     * @memberof ProductsList
     */
    items: Array<Product>;
    /**
     * URL to access the next page of the Entitlement's products. If not present / null, there is no next page
     * @type {string}
     * @memberof ProductsList
     */
    nextPage: string | null;
    /**
     * The URL where this list can be accessed.
     * @type {string}
     * @memberof ProductsList
     */
    url: string;
}


/**
 * @export
 */
export const ProductsListObjectEnum = {
    List: 'list'
} as const;
export type ProductsListObjectEnum = typeof ProductsListObjectEnum[keyof typeof ProductsListObjectEnum];


/**
 * Check if a given object implements the ProductsList interface.
 */
export function instanceOfProductsList(value: object): boolean {
    if (!('object' in value)) return false;
    if (!('items' in value)) return false;
    if (!('nextPage' in value)) return false;
    if (!('url' in value)) return false;
    return true;
}

export function ProductsListFromJSON(json: any): ProductsList {
    return ProductsListFromJSONTyped(json, false);
}

export function ProductsListFromJSONTyped(json: any, ignoreDiscriminator: boolean): ProductsList {
    if (json == null) {
        return json;
    }
    return {
        
        'object': json['object'],
        'items': ((json['items'] as Array<any>).map(ProductFromJSON)),
        'nextPage': json['next_page'],
        'url': json['url'],
    };
}

export function ProductsListToJSON(value?: ProductsList | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'object': value['object'],
        'items': ((value['items'] as Array<any>).map(ProductToJSON)),
        'next_page': value['nextPage'],
        'url': value['url'],
    };
}

