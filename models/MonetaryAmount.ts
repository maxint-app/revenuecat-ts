/* tslint:disable */
/* eslint-disable */
/**
 * Developer API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { Currency } from './Currency';
import {
    CurrencyFromJSON,
    CurrencyFromJSONTyped,
    CurrencyToJSON,
} from './Currency';

/**
 * 
 * @export
 * @interface MonetaryAmount
 */
export interface MonetaryAmount {
    /**
     * 
     * @type {Currency}
     * @memberof MonetaryAmount
     */
    currency: Currency;
    /**
     * Total revenue generated (excluding taxes and commission)
     * @type {number}
     * @memberof MonetaryAmount
     */
    gross: number;
    /**
     * Store commission or payment processor fees deducted from gross revenue (if any)
     * @type {number}
     * @memberof MonetaryAmount
     */
    commission?: number;
    /**
     * Estimated taxes deducted from gross revenue
     * @type {number}
     * @memberof MonetaryAmount
     */
    tax: number;
    /**
     * Net revenue after store commission / fees and taxes
     * @type {number}
     * @memberof MonetaryAmount
     */
    proceeds: number;
}

/**
 * Check if a given object implements the MonetaryAmount interface.
 */
export function instanceOfMonetaryAmount(value: object): boolean {
    if (!('currency' in value)) return false;
    if (!('gross' in value)) return false;
    if (!('tax' in value)) return false;
    if (!('proceeds' in value)) return false;
    return true;
}

export function MonetaryAmountFromJSON(json: any): MonetaryAmount {
    return MonetaryAmountFromJSONTyped(json, false);
}

export function MonetaryAmountFromJSONTyped(json: any, ignoreDiscriminator: boolean): MonetaryAmount {
    if (json == null) {
        return json;
    }
    return {
        
        'currency': CurrencyFromJSON(json['currency']),
        'gross': json['gross'],
        'commission': json['commission'] == null ? undefined : json['commission'],
        'tax': json['tax'],
        'proceeds': json['proceeds'],
    };
}

export function MonetaryAmountToJSON(value?: MonetaryAmount | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'currency': CurrencyToJSON(value['currency']),
        'gross': value['gross'],
        'commission': value['commission'],
        'tax': value['tax'],
        'proceeds': value['proceeds'],
    };
}

