/* tslint:disable */
/* eslint-disable */
/**
 * Developer API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from "../runtime.ts";
/**
 * 
 * @export
 * @interface ListProjects403Response
 */
export interface ListProjects403Response {
    /**
     * String representing the object's type. Objects of the same type share the same value.
     * @type {string}
     * @memberof ListProjects403Response
     */
    object: ListProjects403ResponseObjectEnum;
    /**
     * 
     * @type {string}
     * @memberof ListProjects403Response
     */
    type: ListProjects403ResponseTypeEnum;
    /**
     * If the error is parameter-specific, the parameter related to the error
     * @type {string}
     * @memberof ListProjects403Response
     */
    param?: string;
    /**
     * A URL to more information about the error reported
     * @type {string}
     * @memberof ListProjects403Response
     */
    docUrl?: string;
    /**
     * A message describing the reason of the error
     * @type {string}
     * @memberof ListProjects403Response
     */
    message: string;
    /**
     * Indicates if the error is retryable or not
     * @type {boolean}
     * @memberof ListProjects403Response
     */
    retryable: boolean;
    /**
     * The ms the client should wait before retrying the request. Only present for retryable errors.
     * @type {number}
     * @memberof ListProjects403Response
     */
    backoffMs?: number;
}


/**
 * @export
 */
export const ListProjects403ResponseObjectEnum = {
    Error: 'error'
} as const;
export type ListProjects403ResponseObjectEnum = typeof ListProjects403ResponseObjectEnum[keyof typeof ListProjects403ResponseObjectEnum];

/**
 * @export
 */
export const ListProjects403ResponseTypeEnum = {
    AuthorizationError: 'authorization_error'
} as const;
export type ListProjects403ResponseTypeEnum = typeof ListProjects403ResponseTypeEnum[keyof typeof ListProjects403ResponseTypeEnum];


/**
 * Check if a given object implements the ListProjects403Response interface.
 */
export function instanceOfListProjects403Response(value: object): boolean {
    if (!('object' in value)) return false;
    if (!('type' in value)) return false;
    if (!('message' in value)) return false;
    if (!('retryable' in value)) return false;
    return true;
}

export function ListProjects403ResponseFromJSON(json: any): ListProjects403Response {
    return ListProjects403ResponseFromJSONTyped(json, false);
}

export function ListProjects403ResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): ListProjects403Response {
    if (json == null) {
        return json;
    }
    return {
        
        'object': json['object'],
        'type': json['type'],
        'param': json['param'] == null ? undefined : json['param'],
        'docUrl': json['doc_url'] == null ? undefined : json['doc_url'],
        'message': json['message'],
        'retryable': json['retryable'],
        'backoffMs': json['backoff_ms'] == null ? undefined : json['backoff_ms'],
    };
}

export function ListProjects403ResponseToJSON(value?: ListProjects403Response | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'object': value['object'],
        'type': value['type'],
        'param': value['param'],
        'doc_url': value['docUrl'],
        'message': value['message'],
        'retryable': value['retryable'],
        'backoff_ms': value['backoffMs'],
    };
}

